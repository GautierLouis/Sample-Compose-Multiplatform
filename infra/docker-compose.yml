version: "3.8"

services:
  db:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env.dev
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - appnet

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:example@db:5432/appdb?sslmode=disable"
    depends_on:
      - db
    ports:
      - "9187:9187"
    networks:
      - appnet

  server:
    build:
      context: ..                # repo root
      dockerfile: server/Dockerfile
    restart: unless-stopped
    env_file:
      - .env.dev
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      - db
      - postgres-exporter
    networks:
      - appnet

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    depends_on:
      - server
      - postgres-exporter
    networks:
      - appnet

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_AUTH_ANONYMOUS_ENABLED: "false"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - appnet

volumes:
  db-data:
  prometheus-data:
  grafana-data:

networks:
  appnet:
    driver: bridge
